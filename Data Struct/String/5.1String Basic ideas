一、定义一个存储字符串的数组
1.注意数组的长度，预留一个位置存储数组长度

二、生成一个其值等于chars的串T
1.注意函数的输入chars是一个字符串（双引号括起来）；
2.如果chars的长度大于数组最大长度，返回提示；
3.将chars的长度存放在数组的第一个元素；
4.循环给数组T赋值；
5.打印提示，复制完毕。

三、由串S复制得串T
1.将S中的元素逐一赋值给T；

四、从键盘获得字符串R
1.输出提示；
2.从键盘获取字符串--使用fgets函数；

五、返回串的元素个数
1.打印数组的第一个元素的值即可

六、 输出字符串T 
1.遍历输出字符串的每一个元素

七、比较两个字符串的大小
1.先比较字符串的长度，长的大于短的；
2.如果长度相等，逐个比较字符，当不一样时，比较谁的字符的编码大；


八、用T返回S1和S2联接而成的新串。并对截断情况打印提示
1.判断两个串的长度和是否大于最大长度
2.若不大于（未截断）：
  ①两个遍历进行赋值；
  ②给新串的长度赋值；
3.若大于（截断）：
  ①两个遍历进行赋值；（注意循环结束条件的选择）
  ②给新串的长度赋值；（应为最大长度）

九、清空字符串
1.令字符串的第一个元素（字符串长度）为零

十、用Sub返回串S的第pos个字符起长度为len的子串
1.如果pos<0或者>S的长度，或有len<0或者>S的长度-pos+1的情况，打印错误提示
2.无错误，则遍历赋值字符串Sub，并为字符串的长度赋值。

十一、返回子串T在主串S中第pos个字符之后的位置。若不存在,则打印提示
1.主串从pos的位置开始匹配，子串从头开始匹配；
2.当主串和子串的匹配指针没有到达末尾时，循环继续；
3.若字符匹配，则匹配指针后移一位；
4.若子串不匹配，主串的匹配指针i退回到上次匹配首位的下一位，子串的匹配指针回到首位；
5.当子串的匹配指针大于子串长度时，说明匹配成功，返回此时的位置（主串指针-子串长度）；
6.若不是以上几种情况，则打印主串中无匹配子串字符串。

十二、T为非空串。若主串S中第pos个字符之后存在与T相等的子串，则返回第一个这样的子串在S中的位置，否则打印提示。
1.建立临时变量存储主串和子串的长度，临时字符串变量和当前位置；
2.对pos的值进行判断，确保大于零；
3.当当前位置变量i<=主子串的长度差+1时，能确保此时当前位置到主串结尾的字符足够比得上子串的长度
4.调用函数，取主串中第i个位置长度与T相等的子串给sub；
5.如果sub和子串比较不相等，则位置变量加一，继续比较；
6.如果相等，打印此时的当前位置的值；
7.循环直到不满足3号条件时（退出循环），打印提示


十三、在串S的第pos个字符之前插入串T。插入位置不正确或完全插入或者部分插入都返回提示
1.判断位置pos是否正确，若比1小或者比最后一个位置大，打印提示；
2.判断待插入字符串和原字符串的长度之和，若小于最大长度则完全插入，打印提示
3.插入的过程：
首先把pos位置之后的元素存到整个字符串末尾的位置上去，以免丢失，从后向前逐个插入；
然后把串T逐个存进来；
最后更新字符串的长度为两者之和。

十四、从串S中删除第pos个字符起长度为len的子串 
1.判断pos和len是否符合要求；不符合要求打印提示；
2.把删除字符之后的元素依次挪到前面；
3.字符串的长度更新。

十五、用V替换主串S中出现的所有与T相等的不重叠的子串
1.判断如果是空串，打印提示；
2.定义一个变量i，从串S的第一个字符起查找串T；
3.更新i为最新的pos值：
4.如果串中含有子串：
首先删除该子串；
然后在原来的位置插入新串V；
最后在插入的串V后面继续查找串T；

*****巧妙的do--while循环语句！！




















