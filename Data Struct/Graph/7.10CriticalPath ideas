一、建立邻接矩阵结构体

二、建立邻接表结构体

三、建立邻接矩阵表示的网结构

四、利用邻接矩阵构建邻接表
1.给图结构体申请空间
2.将邻接矩阵中的顶点个数和边个数的参数传递给邻接表相关参数
3.建立顶点表，将顶点表的入度置为0，顶点元素逐一赋值，指向顶点边表的指针（边表头指针）指为空
4.通过双重循环建立边表
  在循环中，先申请一个边结点，赋值邻接序号，利用头插法将新的边插入，
  将入度加一
  
五、拓扑排序，用于计算etv和拓扑序列列表；若GL有回路，则打印提示
1.建立边表结点临时变量e；
2.建立栈顶指针的下标变量并初始化；
  建立用于统计输出顶点的个数变量并初始化；
  建立栈并为其分配存储空间（注意栈应存得下全部的顶点）
  建立存储拓扑序列列表的另一个栈并为其分配存储空间（注意栈应存得下全部的顶点），栈顶指针初始化
  建立事件最早发生时间数组，并分配空间
3.建立循环将入度为零的顶点入栈并初始化时间最早发生时间数组
4.只要栈顶指针不为零：
         临时变量gettop获得栈顶元素并将栈顶指针向下移动
         输出顶点计数变量加一；
         将弹出的顶点序号压入拓扑序列的栈；
         建立循环遍历栈顶元素对应顶点的边表结点：
                  建立变量存储邻接点
                  将k号顶点的邻接点的入度减1，如果减1后为0，则入栈
                  求各顶点事件的最早发生时间etv值：
                  如果当前顶点的最早发生时间+通向下一个顶点的弧的时间>下一个顶点的最早发生时间，
                  则将这个较大值作为下一个结点的最早发生时间
5.判断如果输出的顶点个数小于图的顶点数，则打印提示。

六、求关键路径,GL为有向网，输出G的各项关键活动
1.建立边表结点临时变量e；声明活动最早发生时间和最迟发生时间变量；
2.调用函数求拓扑序列以及事件最早发生时间数组；
3.建立事件最晚发生时间数组，并为其分配空间
4.建立循环初始化事件最晚发生时间数组；
5.只要2号栈的栈顶指针不为零：（注意2号栈存储的是拓扑序列，操作只出不进）--此循环用于求解ltv
         将栈顶元素出栈给gettop，栈顶元素减一；
         建立循环遍历栈顶元素对应顶点的边表结点：
                  如果下一个顶点的最晚发生时间-通向下个顶点的弧的时间<当前顶点的最早发生时间，
                  则将这个较小值作为当前结点的最晚发生时间。
6.循环遍历输出事件最早和最晚发生数组；
7.建立循环求解活动最早发生时间和最迟发生时间
         建立循环遍历栈顶元素对应顶点的边表结点：
                建立变量存储邻接点；
                给活动最早时间赋值为当前顶点的事件最早活动时间；
                给活动最晚时间赋值为下一顶点的事件最晚活动时间-通向下个顶点的弧的时间；
                判断如果活动最早发生时间和最迟发生时间相等，则在关键路径上，打印此路径；


!!!!注意，应将事件最早发生时间和最迟发生时间数组 ，用于存储拓扑序列的栈以及用于stack2的指针声明为全局变量
