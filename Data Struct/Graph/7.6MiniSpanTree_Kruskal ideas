一、建立网结构体
1.包含边表数组以及边和顶点数量的变量

二、定义边集数组edge结构体
1.包含边的起点，终点和权值变量

三、建立网
1.网即边带有权值的图

四、利用邻接矩阵构建边集数组
1.建立边集数组结构体类型的矩阵用以存储边集结构
2.建立双重循环给边集数组赋值，（注意外层循环的循环终点；内循环的初值应为外循环的值加一）
      具体而言：如果权值小于极限值（权值存在）
                      将外层循环的值作为edge的起点；内层循环的值作为edge的终点；权值也进行相应的赋值
	      注意要在赋值之后将edge矩阵递增！

五、对网按权值排序
1.注意输入参数为数组时的形参表示方法；
2.建立双重循环，内层循环将数组里面的后续的所有值与其进行比较并排位--冒泡排序；
3.在内层循环中，当内外层序号代表的权重有大小关系时，将edge相应序号数组中的结构体三个元素互换；
4.输出按权值排序之后的边集数组。

六、生成最小树的kruskal算法
1.定义一个数组parent用于判断边与边是否会形成环路，循环遍历将对应顶点的parent数组的值初始化为零
2.循环每一条边，
	将此时对应的parent数组和edges数组中的begin参量传入find函数中，寻找连线顶点的尾部下标，传递给m；
	将此时对应的parent数组和edges数组中的begin参量传入find函数中，寻找连线顶点的尾部下标，传递给n；
	如果n与m不等，说明此边没有与现有的生成树形成环路，则：
		将此边的结尾顶点放入下标为起点的parent中，表示此顶点已经在生成树集合中；
		输出这条边（边集数组的对应参量）。


七、find函数
1.用于查找连线顶点的尾部下标，输入参数为parent数组和顶点
2.只要该顶点对应的parent值>零，则f=parent[f];
3.否则就直接返回这个顶点的值




