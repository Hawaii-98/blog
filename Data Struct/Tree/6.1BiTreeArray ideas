一、定义一个数组用以存储二叉树

二、创建结点位置结构体
1.结构体内包含结点的层以及结点在本层的序号(注意是按满二叉树计算！！)

三、构造空二叉树
1.给数组元素遍历赋空值。

四、按层序次序输入二叉树中结点的值(字符型或整型), 构造顺序存储的二叉树T
1.建立与键盘的交互程序，限定输入回车结束，输入长度；
2.从键盘读取输入，如长度大于则返回提示将截断输入，否则继续；
3.循环遍历对树进行赋值操作：
  若出现无双亲的非根结点，退出赋值过程，直接将后续结点赋空值；
4.赋值结束之后，对剩余的结点赋空值！

五、逐个输出树的结点
循环遍历输出数组的每个结点的字符

六、清空树
1.与树的初始化完全一样，此处注意这种新的定义方法（当且仅当两个函数完全一样时）

七、判断二叉树是否为空
**直接判断根节点！！若根节点为空，则树为空

八、计算树的深度
1.找到树的最后一个结点
2.依据公式：树的深度与结点个数的关系d=以2为底n的对数1取整后加一

九、如果树不空，返回树的根
1.判断树是否为空，空着提示
2.不空则打印树的根。

十、返回处于位置e(层,本层序号)的结点的值
1.根据结点的位置计算公式，第i层的第一个元素序号是2^i，之后再加上本层序号，
此处注意由于顺序结构中从0开始计入顺序，故减2

十一、给处于位置e(层,本层序号)的结点赋新值value
1.将位置e转化为矩阵的序号值
2.如果待赋值位置的双亲为空并且赋的值不为空，打印错误信息；
3.如果赋的值为空，但是待赋值位置有左或者右儿子，打印错误信息；
4.排除以上情况后，给相应位置幅值

十二、e是T中某个结点，返回e的左兄弟。若e是T的左孩子或无左兄弟,则打印提示
1.首先排除空树；
2.循环遍历寻找e，若找到e且e确实有左兄弟（e处的i的值为偶数），则返回这个值，否则打印提示
***注意此处用的一个flag变量！！

十三、e是T中某个结点，返回e的右兄弟。若e是T的右孩子或无右兄弟,则打印提示
1.首先排除空树；
2.循环遍历寻找e，若找到e且e确实有右兄弟（e处的i的值为奇数），则返回这个值，否则打印提示

十四、前序遍历二叉树
1.判断树是否为空，空则提示；
2.先输出当前的结点值，
  判断左子树是否为空，不空则递归调用；
  判断右子树是否为空，不空则递归调用。

十五、中序遍历二叉树
1.判断树是否为空，空则提示；
2.先判断左子树是否为空，不空则递归调用；
  输出当前的结点值，
  判断右子树是否为空，不空则递归调用。

十六、后序遍历二叉树
1.判断树是否为空，空则提示；
2.先判断右子树是否为空，不空则递归调用；
  输出当前的结点值，
  判断左子树是否为空，不空则递归调用。
  
十七、层序遍历二叉树
1.找到最后一个非空结点的序号；
2.逐个打印非空结点的元素值；

十八、逐层、按本层序号输出二叉树
1.理解逐层就是逐深度进行输出
2.建立循环从1到最大深度进行遍历，
  输出现在的层数；
  建立循环，根据现在的层数确定从最小序号到最大序号遍历
  当结点的值不为空时，输出此此结点的位置以及此结点的元素。




















