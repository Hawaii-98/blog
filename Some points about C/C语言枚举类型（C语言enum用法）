一、枚举类型的定义形式为：
   enum typeName{ valueName1, valueName2, valueName3, ...... };
   enum是一个新的关键字，专门用来定义枚举类型，这也是它在C语言中的唯一用途；typeName是枚举类型的名字；
   valueName1, valueName2, valueName3, ......是每个值对应的名字的列表。注意最后的;不能少。

二、例如，列出一个星期有几天：
   enum week{ Mon, Tues, Wed, Thurs, Fri, Sat, Sun };
   可以看到，我们仅仅给出了名字，却没有给出名字对应的值，
   这是因为枚举值默认从 0 开始，往后逐个加 1（递增）；也就是说，week 中的 Mon、Tues ...... Sun 对应的值分别为 0、1 ...... 6。

三、我们也可以给每个名字都指定一个值：
   enum week{ Mon = 1, Tues = 2, Wed = 3, Thurs = 4, Fri = 5, Sat = 6, Sun = 7 };
   更为简单的方法是只给第一个名字指定值：
   enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun };
   这样枚举值就从 1 开始递增，跟上面的写法是等效的。
 
四、需要注意的两点是：
  1) 枚举列表中的 Mon、Tues、Wed 这些标识符的作用范围是全局的（严格来说是 main() 函数内部），不能再定义与它们名字相同的变量。
  2) Mon、Tues、Wed 等都是常量，不能对它们赋值，只能将它们的值赋给其他的变量。
  枚举和宏其实非常类似：宏在预处理阶段将名字替换成对应的值，枚举在编译阶段将名字替换成对应的值。我们可以将枚举理解为编译阶段的宏。
   
   
